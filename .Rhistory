type = "upper",    # Only plot the upper triangular part of the matrix (to avoid duplication)
tl.col = "black",  # Label color
tl.cex = 1,        # Label font size
)
partial_correlations_num_dataframe = as.data.frame(partial_correlations_num$estimate)
partial_correlations_num_dataframe = reshape2::melt(partial_correlations_num, varnames = c("feature1", "feature2"))
View(partial_correlations_num_dataframe)
View(partial_correlations_num_dataframe)
partial_correlations_num_dataframe = as.data.frame(partial_correlations_num$estimate)
partial_correlations_num_dataframe = reshape2::melt(partial_correlations_num, varnames = c("feature1", "feature2"))
partial_correlations_num = partial_correlations_num[partial_correlations_num$feature1 != partial_correlations_num$feature2,]
partial_correlations_num_dataframe = as.data.frame(partial_correlations_num$estimate)
partial_correlations_num_dataframe = reshape2::melt(partial_correlations_num, varnames = c("feature1", "feature2"))
partial_correlations_num = partial_correlations_num[partial_correlations_num$feature1 != partial_correlations_num$feature2,]
partial_correlations_num_dataframe = as.data.frame(partial_correlations_num$estimate)
partial_correlations_num_dataframe = reshape2::melt(partial_correlations_num, varnames = c("feature1", "feature2"))
if (nrow(partial_correlations_num) > 0) {
partial_correlations_num = partial_correlations_num[partial_correlations_num$feature1 != partial_correlations_num$feature2,]
}
partial_correlations_num_dataframe = as.data.frame(partial_correlations_num$estimate)
if partial_correlations_num %>% filter(feature1 == feature2) %>% nrow() > 0 {
partial_correlations_num_dataframe = as.data.frame(partial_correlations_num$estimate)
partial_correlations_num_dataframe = partial_correlations_num_dataframe[partial_correlations_num_dataframe$feature1 != partial_correlations_num_dataframe$feature2,]
numerical_features <- c("Age", "Flight_Distance", "Departure_Delay_in_Minutes", "Arrival_Delay_in_Minutes")
partial_correlations_num <- pcor(data[, numerical_features], method = "spearman")
# make the matrix
partial_corr_matrix_num <- partial_correlations_num$estimate
# Customize the plot size
options(repr.plot.width = 200, repr.plot.height = 200)
# Create the correlation plot
corrplot(partial_corr_matrix_num,
method = "color",  # Choose "color" to visualize the correlations using colors
type = "upper",    # Only plot the upper triangular part of the matrix (to avoid duplication)
tl.col = "black",  # Label color
tl.cex = 1,        # Label font size
)
#PARTIAL CORRELATION MATRIX FOR CATEGORICAL/ORDINAL
categorical_features = c('Inflight_wifi_service', 'Departure_Arrival_time_convenient', 'Ease_of_Online_booking', 'Gate_location', 'Food_and_drink', 'Online_boarding', 'Seat_comfort', 'Inflight_entertainment', 'On_board_service', 'Leg_room_service', 'Baggage_handling', 'Checkin_service', 'Inflight_service','Cleanliness')
partial_correlations_cat <- pcor(data[, categorical_features], method = "spearman")
# make the matrix
partial_corr_matrix_cat <- partial_correlations_cat$estimate
# Customize the plot size
options(repr.plot.width = 200, repr.plot.height = 200)
# Create the correlation plot
corrplot(partial_corr_matrix_cat,
method = "color",  # Choose "color" to visualize the correlations using colors
type = "upper",    # Only plot the upper triangular part of the matrix (to avoid duplication)
tl.col = "black",  # Label color
tl.cex = 1,        # Label font size
)
partial_correlations_num_dataframe = as.data.frame(partial_correlations_num$estimate)
partial_correlations_num_dataframe = partial_correlations_num_dataframe[partial_correlations_num_dataframe$feature1 != partial_correlations_num_dataframe$feature2,]
View(partial_correlations_num_dataframe)
View(partial_correlations_num_dataframe)
partial_correlations_num_dataframe = as.data.frame(partial_correlations_num$estimate)
View(partial_correlations_num_dataframe)
partial_correlations_num_dataframe = as.data.frame(partial_correlations_num$estimate)
partial_correlations_num_dataframe = reshape2::melt(partial_correlations_num_dataframe, varnames = c("feature1", "feature2"))
View(partial_correlations_num_dataframe)
View(partial_correlations_num_dataframe)
partial_correlations_num_dataframe = as.data.frame(partial_correlations_num$estimate)
partial_correlations_num_dataframe = reshape2::melt(partial_correlations_num_dataframe)
View(partial_correlations_num_dataframe)
partial_correlations_num_dataframe = as.data.frame(partial_correlations_num$estimate)
partial_correlations_num_dataframe[partial_correlations_num_dataframe$estimate > 0.5,]
View(partial_correlations_num_dataframe)
partial_correlations_num_dataframe = as.data.frame(partial_correlations_num$estimate)
partial_correlations_cat_dataframe = as.data.frame(partial_correlations_cat$estimate)
View(partial_correlations_cat_dataframe)
partial_correlations_num_dataframe = as.data.frame(partial_correlations_num$estimate)
partial_correlations_cat_dataframe = as.data.frame(partial_correlations_cat$estimate)
partial_corr_cat_dataframe = data.frame()
for (i in 1:nrow(partial_correlations_cat)) {
for (j in 1:ncol(partial_correlations_cat)) {
if (partial_correlations_cat[i,j] > 0.5 | partial_correlations_cat[i,j] < -0.5) {
partial_corr_cat_dataframe = rbind(partial_corr_cat_dataframe, c(names(partial_correlations_cat)[i], names(partial_correlations_cat)[j], partial_correlations_cat[i,j]))
}
}
}
partial_correlations_num_dataframe = as.data.frame(partial_correlations_num$estimate)
partial_correlations_cat_dataframe = as.data.frame(partial_correlations_cat$estimate)
filtered_correlation_cats <- subset(partial_correlations_cat, abs(estimate) > 0.5)
partial_correlations_num_dataframe = as.data.frame(partial_correlations_num$estimate)
partial_correlations_cat_dataframe = as.data.frame(partial_correlations_cat$estimate)
filtered_correlation_cats <- subset(partial_correlations_cat, abs(estimate) > 0.5)
partial_correlations_num_dataframe = as.data.frame(partial_correlations_num$estimate)
partial_correlations_cat_dataframe = as.data.frame(partial_correlations_cat$estimate)
partial_corr_cat_dataframe = data.frame()
for row in rownames(partial_correlations_cat){
partial_correlations_num_dataframe = as.data.frame(partial_correlations_num$estimate)
partial_correlations_cat_dataframe = as.data.frame(partial_correlations_cat$estimate)
partial_corr_cat_dataframe = data.frame()
for (row in rownames(partial_correlations_cat)) {
for (col in colnames(partial_correlations_cat)) {
# Check if the partial correlation is greater than 0.5 or less than -0.5
if (partial_correlations_cat[row, col] > 0.5 | partial_correlations_cat[row, col] < -0.5) {
# Create a new row with the feature names and correlation value
new_row <- c(row, col, partial_correlations_cat[row, col])
# Append the new row to the 'partial_corr_cat_dataframe'
partial_corr_cat_dataframe <- rbind(partial_corr_cat_dataframe, new_row)
}
}
}
# Set appropriate column names for the result dataframe
colnames(partial_corr_cat_dataframe) <- c("Feature1", "Feature2", "CorrelationValue")
partial_correlations_num_dataframe = as.data.frame(partial_correlations_num$estimate)
partial_correlations_cat_dataframe = as.data.frame(partial_correlations_cat$estimate)
partial_corr_cat_dataframe = data.frame()
for (row in rownames(partial_correlations_cat)) {
for (col in colnames(partial_correlations_cat)) {
# Check if the partial correlation is greater than 0.5 or less than -0.5
if (partial_correlations_cat[row, col] > 0.5 | partial_correlations_cat[row, col] < -0.5) {
# Create a new row with the feature names and correlation value
new_row <- c(row, col, partial_correlations_cat[row, col])
# Append the new row to the 'partial_corr_cat_dataframe'
partial_corr_cat_dataframe <- rbind(partial_corr_cat_dataframe, new_row)
}
}
}
# Set appropriate column names for the result dataframe
colnames(partial_corr_cat_dataframe)= c("Feature1", "Feature2", "CorrelationValue")
partial_correlations_num_dataframe = as.data.frame(partial_correlations_num$estimate)
partial_correlations_cat_dataframe = as.data.frame(partial_correlations_cat$estimate)
partial_corr_cat_dataframe = data.frame()
for (row in rownames(partial_correlations_cat)) {
for (col in colnames(partial_correlations_cat)) {
# Check if the partial correlation is greater than 0.5 or less than -0.5
if (partial_correlations_cat[row, col] > 0.5 | partial_correlations_cat[row, col] < -0.5) {
# Create a new row with the feature names and correlation value
new_row <- c(row, col, partial_correlations_cat[row, col])
# Append the new row to the 'partial_corr_cat_dataframe'
partial_corr_cat_dataframe <- rbind(partial_corr_cat_dataframe, new_row)
}
}
}
# Set appropriate column names for the result dataframe
colnames(partial_corr_cat_dataframe)= c("Feature1", "Feature2", "CorrelationValue")
partial_corr_cat_dataframe
partial_correlations_num_dataframe = as.data.frame(partial_correlations_num$estimate)
partial_correlations_cat_dataframe = as.data.frame(partial_correlations_cat$estimate)
partial_corr_cat_dataframe = data.frame()
for (row in rownames(partial_correlations_cat)) {
for (col in colnames(partial_correlations_cat)) {
# Check if the partial correlation is greater than 0.5 or less than -0.5
if (partial_correlations_cat[row, col] > 0.3 | partial_correlations_cat[row, col] < -0.3) {
# Create a new row with the feature names and correlation value
new_row <- c(row, col, partial_correlations_cat[row, col])
# Append the new row to the 'partial_corr_cat_dataframe'
partial_corr_cat_dataframe <- rbind(partial_corr_cat_dataframe, new_row)
}
}
}
# Set appropriate column names for the result dataframe
colnames(partial_corr_cat_dataframe)= c("Feature1", "Feature2", "CorrelationValue")
partial_correlations_num_dataframe = as.data.frame(partial_correlations_num$estimate)
partial_correlations_cat_dataframe = as.data.frame(partial_correlations_cat$estimate)
partial_corr_cat_dataframe = data.frame()
for (row in rownames(partial_correlations_cat)) {
for (col in colnames(partial_correlations_cat)) {
# Check if the partial correlation is greater than 0.5 or less than -0.5
if (partial_correlations_cat[row, col] > 0.2 | partial_correlations_cat[row, col] < -0.2) {
# Create a new row with the feature names and correlation value
new_row <- c(row, col, partial_correlations_cat[row, col])
# Append the new row to the 'partial_corr_cat_dataframe'
partial_corr_cat_dataframe <- rbind(partial_corr_cat_dataframe, new_row)
}
}
}
# Set appropriate column names for the result dataframe
colnames(partial_corr_cat_dataframe)= c("Feature1", "Feature2", "CorrelationValue")
partial_correlations_num_dataframe = as.data.frame(partial_correlations_num$estimate)
partial_correlations_cat_dataframe = as.data.frame(partial_correlations_cat$estimate)
partial_corr_cat_dataframe = data.frame()
for (row in rownames(partial_correlations_cat)) {
for (col in colnames(partial_correlations_cat)) {
# Check if the partial correlation is greater than 0.5 or less than -0.5
if (partial_correlations_cat[row, col] > 0.0 | partial_correlations_cat[row, col] < -0.0) {
# Create a new row with the feature names and correlation value
new_row <- c(row, col, partial_correlations_cat[row, col])
# Append the new row to the 'partial_corr_cat_dataframe'
partial_corr_cat_dataframe <- rbind(partial_corr_cat_dataframe, new_row)
}
}
}
# Set appropriate column names for the result dataframe
colnames(partial_corr_cat_dataframe)= c("Feature1", "Feature2", "CorrelationValue")
partial_correlations_num_dataframe = as.data.frame(partial_correlations_num$estimate)
partial_correlations_cat_dataframe = as.data.frame(partial_correlations_cat$estimate)
partial_corr_cat_dataframe = data.frame()
for (row in rownames(partial_correlations_cat)) {
for (col in colnames(partial_correlations_cat)) {
# Check if the partial correlation is greater than 0.5 or less than -0.5
if (partial_correlations_cat[row, col] > 0 | partial_correlations_cat[row, col] < -0) {
# Create a new row with the feature names and correlation value
new_row <- c(row, col, partial_correlations_cat[row, col])
# Append the new row to the 'partial_corr_cat_dataframe'
partial_corr_cat_dataframe <- rbind(partial_corr_cat_dataframe, new_row)
}
}
}
# Set appropriate column names for the result dataframe
colnames(partial_corr_cat_dataframe)= c("Feature1", "Feature2", "CorrelationValue")
partial_correlations_num_dataframe = as.data.frame(partial_correlations_num$estimate)
partial_correlations_cat_dataframe = as.data.frame(partial_correlations_cat$estimate)
partial_corr_cat_dataframe = data.frame()
for (row in rownames(partial_correlations_cat)) {
for (col in colnames(partial_correlations_cat)) {
# Check if the partial correlation is greater than 0.5 or less than -0.5
if (partial_correlations_cat[row, col] > 0.00000000 | partial_correlations_cat[row, col] < -0.000000000) {
# Create a new row with the feature names and correlation value
new_row <- c(row, col, partial_correlations_cat[row, col])
# Append the new row to the 'partial_corr_cat_dataframe'
partial_corr_cat_dataframe <- rbind(partial_corr_cat_dataframe, new_row)
}
}
}
# Set appropriate column names for the result dataframe
colnames(partial_corr_cat_dataframe)= c("Feature1", "Feature2", "CorrelationValue")
partial_correlations_num_dataframe = as.data.frame(partial_correlations_num$estimate)
partial_correlations_cat_dataframe = as.data.frame(partial_correlations_cat$estimate)
partial_corr_cat_dataframe = data.frame()
for (row in rownames(partial_correlations_cat_dataframe)) {
for (col in colnames(partial_correlations_cat_dataframe)) {
# Check if the partial correlation is greater than 0.5 or less than -0.5
if (partial_correlations_cat_dataframe[row, col] > 0.00000000 | partial_correlations_cat_dataframe[row, col] < -0.000000000) {
# Create a new row with the feature names and correlation value
new_row <- c(row, col, partial_correlations_cat_dataframe[row, col])
# Append the new row to the 'partial_corr_cat_dataframe'
partial_corr_cat_dataframe <- rbind(partial_corr_cat_dataframe, new_row)
}
}
}
# Set appropriate column names for the result dataframe
colnames(partial_corr_cat_dataframe)= c("Feature1", "Feature2", "CorrelationValue")
# Print the resulting dataframe
print(partial_corr_cat_dataframe)
partial_correlations_num_dataframe = as.data.frame(partial_correlations_num$estimate)
partial_correlations_cat_dataframe = as.data.frame(partial_correlations_cat$estimate)
partial_corr_cat_dataframe = data.frame()
for (row in rownames(partial_correlations_cat_dataframe)) {
for (col in colnames(partial_correlations_cat_dataframe)) {
# Check if the partial correlation is greater than 0.5 or less than -0.5
if (partial_correlations_cat_dataframe[row, col] > 0.5 | partial_correlations_cat_dataframe[row, col] < -0.5) {
# Create a new row with the feature names and correlation value
new_row <- c(row, col, partial_correlations_cat_dataframe[row, col])
# Append the new row to the 'partial_corr_cat_dataframe'
partial_corr_cat_dataframe <- rbind(partial_corr_cat_dataframe, new_row)
}
}
}
# Set appropriate column names for the result dataframe
colnames(partial_corr_cat_dataframe)= c("Feature1", "Feature2", "CorrelationValue")
# Print the resulting dataframe
print(partial_corr_cat_dataframe)
View(partial_corr_cat_dataframe)
partial_correlations_num_dataframe = as.data.frame(partial_correlations_num$estimate)
partial_correlations_cat_dataframe = as.data.frame(partial_correlations_cat$estimate)
partial_corr_cat_dataframe = data.frame()
for (row in rownames(partial_correlations_cat_dataframe)) {
for (col in colnames(partial_correlations_cat_dataframe)) {
# Check if the partial correlation is greater than 0.5 or less than -0.5
if (partial_correlations_cat_dataframe[row, col] > 0.5 | partial_correlations_cat_dataframe[row, col] < -0.5) {
# Create a new row with the feature names and correlation value
new_row <- c(row, col, partial_correlations_cat_dataframe[row, col])
# Append the new row to the 'partial_corr_cat_dataframe'
partial_corr_cat_dataframe <- rbind(partial_corr_cat_dataframe, new_row)
}
}
}
# Set appropriate column names for the result dataframe
colnames(partial_corr_cat_dataframe)= c("Feature1", "Feature2", "CorrelationValue")
for (row in rownames(partial_corr_cat_dataframe)){
for col in colnames(partial_corr_cat_dataframe){
View(partial_corr_cat_dataframe)
View(partial_corr_cat_dataframe)
partial_correlations_num_dataframe = as.data.frame(partial_correlations_num$estimate)
partial_correlations_cat_dataframe = as.data.frame(partial_correlations_cat$estimate)
partial_corr_cat_dataframe = data.frame()
for (row in rownames(partial_correlations_cat_dataframe)) {
for (col in colnames(partial_correlations_cat_dataframe)) {
# Check if the partial correlation is greater than 0.5 or less than -0.5
if (partial_correlations_cat_dataframe[row, col] > 0.5 | partial_correlations_cat_dataframe[row, col] < -0.5) {
# Create a new row with the feature names and correlation value
new_row <- c(row, col, partial_correlations_cat_dataframe[row, col])
# Append the new row to the 'partial_corr_cat_dataframe'
partial_corr_cat_dataframe <- rbind(partial_corr_cat_dataframe, new_row)
}
}
}
# Set appropriate column names for the result dataframe
colnames(partial_corr_cat_dataframe)= c("Feature1", "Feature2", "CorrelationValue")
for (row in rownames(partial_corr_cat_dataframe)){
for col in colnames(partial_corr_cat_dataframe){
View(partial_corr_cat_dataframe)
partial_correlations_num_dataframe = as.data.frame(partial_correlations_num$estimate)
partial_correlations_cat_dataframe = as.data.frame(partial_correlations_cat$estimate)
partial_corr_cat_dataframe = data.frame()
for (row in rownames(partial_correlations_cat_dataframe)) {
for (col in colnames(partial_correlations_cat_dataframe)) {
# Check if the partial correlation is greater than 0.5 or less than -0.5
if (partial_correlations_cat_dataframe[row, col] > 0.5 | partial_correlations_cat_dataframe[row, col] < -0.5) {
# Create a new row with the feature names and correlation value
new_row <- c(row, col, partial_correlations_cat_dataframe[row, col])
# Append the new row to the 'partial_corr_cat_dataframe'
partial_corr_cat_dataframe <- rbind(partial_corr_cat_dataframe, new_row)
}
}
}
# Set appropriate column names for the result dataframe
colnames(partial_corr_cat_dataframe)= c("Feature1", "Feature2", "CorrelationValue")
partial_corr_cat_dataframe = partial_corr_cat_dataframe[!duplicated(partial_corr_cat_dataframe), ]
# Print the resulting dataframe
print(partial_corr_cat_dataframe)
View(partial_correlations_cat)
View(partial_correlations_cat_dataframe)
View(partial_corr_cat_dataframe)
partial_correlations_num_dataframe = as.data.frame(partial_correlations_num$estimate)
partial_correlations_cat_dataframe = as.data.frame(partial_correlations_cat$estimate)
partial_corr_cat_dataframe = data.frame()
for (row in rownames(partial_correlations_cat_dataframe)) {
for (col in colnames(partial_correlations_cat_dataframe)) {
# Check if the partial correlation is greater than 0.5 or less than -0.5
if (partial_correlations_cat_dataframe[row, col] > 0.5 | partial_correlations_cat_dataframe[row, col] < -0.5) {
# Create a new row with the feature names and correlation value
new_row <- c(row, col, partial_correlations_cat_dataframe[row, col])
# Append the new row to the 'partial_corr_cat_dataframe'
partial_corr_cat_dataframe <- rbind(partial_corr_cat_dataframe, new_row)
}
}
}
# Set appropriate column names for the result dataframe
colnames(partial_corr_cat_dataframe)= c("Feature1", "Feature2", "CorrelationValue")
# delete correlation value for feature with themselves
partial_corr_cat_dataframe = partial_corr_cat_dataframe[partial_corr_cat_dataframe$Feature1 != partial_corr_cat_dataframe$Feature2,]
# Print the resulting dataframe
print(partial_corr_cat_dataframe)
View(partial_corr_cat_dataframe)
partial_correlations_num_dataframe = as.data.frame(partial_correlations_num$estimate)
partial_correlations_cat_dataframe = as.data.frame(partial_correlations_cat$estimate)
partial_corr_cat_dataframe = data.frame()
for (row in rownames(partial_correlations_cat_dataframe)) {
for (col in colnames(partial_correlations_cat_dataframe)) {
# Check if the partial correlation is greater than 0.5 or less than -0.5
if (partial_correlations_cat_dataframe[row, col] > 0.4 | partial_correlations_cat_dataframe[row, col] < -0.4) {
# Create a new row with the feature names and correlation value
new_row <- c(row, col, partial_correlations_cat_dataframe[row, col])
# Append the new row to the 'partial_corr_cat_dataframe'
partial_corr_cat_dataframe <- rbind(partial_corr_cat_dataframe, new_row)
}
}
}
# Set appropriate column names for the result dataframe
colnames(partial_corr_cat_dataframe)= c("Feature1", "Feature2", "CorrelationValue")
# delete correlation value for feature with themselves
partial_corr_cat_dataframe = partial_corr_cat_dataframe[partial_corr_cat_dataframe$Feature1 != partial_corr_cat_dataframe$Feature2,]
# Print the resulting dataframe
print(partial_corr_cat_dataframe)
partial_correlations_num_dataframe = as.data.frame(partial_correlations_num$estimate)
partial_correlations_cat_dataframe = as.data.frame(partial_correlations_cat$estimate)
partial_corr_cat_dataframe = data.frame()
for (row in rownames(partial_correlations_cat_dataframe)) {
for (col in colnames(partial_correlations_cat_dataframe)) {
# Check if the partial correlation is greater than 0.5 or less than -0.5
if (partial_correlations_cat_dataframe[row, col] > 0.3 | partial_correlations_cat_dataframe[row, col] < -0.3) {
# Create a new row with the feature names and correlation value
new_row <- c(row, col, partial_correlations_cat_dataframe[row, col])
# Append the new row to the 'partial_corr_cat_dataframe'
partial_corr_cat_dataframe <- rbind(partial_corr_cat_dataframe, new_row)
}
}
}
# Set appropriate column names for the result dataframe
colnames(partial_corr_cat_dataframe)= c("Feature1", "Feature2", "CorrelationValue")
# delete correlation value for feature with themselves
partial_corr_cat_dataframe = partial_corr_cat_dataframe[partial_corr_cat_dataframe$Feature1 != partial_corr_cat_dataframe$Feature2,]
# Print the resulting dataframe
print(partial_corr_cat_dataframe)
partial_correlations_num_dataframe = as.data.frame(partial_correlations_num$estimate)
partial_correlations_cat_dataframe = as.data.frame(partial_correlations_cat$estimate)
partial_corr_cat_dataframe = data.frame()
for (row in rownames(partial_correlations_cat_dataframe)) {
for (col in colnames(partial_correlations_cat_dataframe)) {
# Check if the partial correlation is greater than 0.5 or less than -0.5
if (partial_correlations_cat_dataframe[row, col] > 0.3 | partial_correlations_cat_dataframe[row, col] < -0.3) {
# Create a new row with the feature names and correlation value
new_row <- c(row, col, partial_correlations_cat_dataframe[row, col])
# Append the new row to the 'partial_corr_cat_dataframe'
partial_corr_cat_dataframe <- rbind(partial_corr_cat_dataframe, new_row)
}
}
}
# Set appropriate column names for the result dataframe
colnames(partial_corr_cat_dataframe)= c("Feature1", "Feature2", "CorrelationValue")
# delete correlation value for feature with themselves
partial_corr_cat_dataframe = partial_corr_cat_dataframe[partial_corr_cat_dataframe$Feature1 != partial_corr_cat_dataframe$Feature2,]
for (row in rownames(partial_corr_cat_dataframe)) {
if (partial_corr_cat_dataframe[row, "CorrelationValue"] %in% partial_corr_cat_dataframe$CorrelationValue) {
partial_corr_cat_dataframe = partial_corr_cat_dataframe[-row,]
}
}
partial_correlations_num_dataframe = as.data.frame(partial_correlations_num$estimate)
partial_correlations_cat_dataframe = as.data.frame(partial_correlations_cat$estimate)
partial_corr_cat_dataframe = data.frame()
for (row in rownames(partial_correlations_cat_dataframe)) {
for (col in colnames(partial_correlations_cat_dataframe)) {
# Check if the partial correlation is greater than 0.5 or less than -0.5
if (partial_correlations_cat_dataframe[row, col] > 0.3 | partial_correlations_cat_dataframe[row, col] < -0.3) {
# Create a new row with the feature names and correlation value
new_row <- c(row, col, partial_correlations_cat_dataframe[row, col])
# Append the new row to the 'partial_corr_cat_dataframe'
partial_corr_cat_dataframe <- rbind(partial_corr_cat_dataframe, new_row)
}
}
}
# Set appropriate column names for the result dataframe
colnames(partial_corr_cat_dataframe)= c("Feature1", "Feature2", "CorrelationValue")
# delete correlation value for feature with themselves
partial_corr_cat_dataframe = partial_corr_cat_dataframe[partial_corr_cat_dataframe$Feature1 != partial_corr_cat_dataframe$Feature2,]
partial_corr_cat_dataframe <- partial_corr_cat_dataframe[!duplicated(partial_corr_cat_dataframe$CorrelationValue), ]
# Print the resulting dataframe
print(partial_corr_cat_dataframe)
partial_correlations_num_dataframe = as.data.frame(partial_correlations_num$estimate)
partial_corr_num_dataframe = data.frame()
for (row in rownames(partial_correlations_num_dataframe)) {
for (col in colnames(partial_correlations_num_dataframe)) {
# Check if the partial correlation is greater than 0.5 or less than -0.5
if (partial_correlations_num_dataframe[row, col] > 0.5 | partial_correlations_num_dataframe[row, col] < -0.5) {
# Create a new row with the feature names and correlation value
new_row <- c(row, col, partial_correlations_num_dataframe[row, col])
# Append the new row to the 'partial_corr_num_dataframe'
partial_corr_num_dataframe <- rbind(partial_corr_num_dataframe, new_row)
}
}
}
# Set appropriate column names for the result dataframe
colnames(partial_corr_num_dataframe)= c("Feature1", "Feature2", "CorrelationValue")
# delete correlation value for feature with themselves
partial_corr_num_dataframe = partial_corr_num_dataframe[partial_corr_num_dataframe$Feature1 != partial_corr_num_dataframe$Feature2,]
partial_corr_num_dataframe <- partial_corr_num_dataframe[!duplicated(partial_corr_num_dataframe$CorrelationValue), ]
# Print the resulting dataframe
print(partial_corr_num_dataframe)
partial_correlations_cat_dataframe = as.data.frame(partial_correlations_cat$estimate)
partial_corr_cat_dataframe = data.frame()
for (row in rownames(partial_correlations_cat_dataframe)) {
for (col in colnames(partial_correlations_cat_dataframe)) {
# Check if the partial correlation is greater than 0.5 or less than -0.5
if (partial_correlations_cat_dataframe[row, col] > 0.3 | partial_correlations_cat_dataframe[row, col] < -0.3) {
# Create a new row with the feature names and correlation value
new_row <- c(row, col, partial_correlations_cat_dataframe[row, col])
# Append the new row to the 'partial_corr_cat_dataframe'
partial_corr_cat_dataframe <- rbind(partial_corr_cat_dataframe, new_row)
}
}
}
# Set appropriate column names for the result dataframe
colnames(partial_corr_cat_dataframe)= c("Feature1", "Feature2", "CorrelationValue")
# delete correlation value for feature with themselves
partial_corr_cat_dataframe = partial_corr_cat_dataframe[partial_corr_cat_dataframe$Feature1 != partial_corr_cat_dataframe$Feature2,]
partial_corr_cat_dataframe <- partial_corr_cat_dataframe[!duplicated(partial_corr_cat_dataframe$CorrelationValue), ]
# Print the resulting dataframe
print(partial_corr_cat_dataframe)
ds_cor2_df = as.data.frame()
## CORRELATION MATRIX FOR ORDINAL VARIABLES
ordinal_variables = c('Inflight_wifi_service', 'Departure_Arrival_time_convenient', 'Ease_of_Online_booking', 'Gate_location', 'Food_and_drink', 'Online_boarding', 'Seat_comfort', 'Inflight_entertainment', 'On_board_service', 'Leg_room_service', 'Baggage_handling', 'Checkin_service', 'Inflight_service','Cleanliness')
# for each ordinal variables, change the values to numeric
for (col in ordinal_variables) {
data[[col]] = as.numeric(data[[col]])
}
ds_cor2 <- cor(subset(data, select = ordinal_variables))
ds_cor2_df = as.data.frame()
ds_cor2_df = data.frame()
for (row in rownames(ds_cor2)) {
for (col in colnames(ds_cor2)) {
# Check if the partial correlation is greater than 0.5 or less than -0.5
if (ds_cor2[row, col] > 0.3 | ds_cor2[row, col] < -0.3) {
# Create a new row with the feature names and correlation value
new_row <- c(row, col, ds_cor2[row, col])
# Append the new row to the 'partial_corr_cat_dataframe'
ds_cor2_df <- rbind(ds_cor2_df, new_row)
}
}
}
# Set appropriate column names for the result dataframe
colnames(ds_cor2_df)= c("Feature1", "Feature2", "CorrelationValue")
# delete correlation value for feature with themselves
ds_cor2_df = ds_cor2_df[ds_cor2_df$Feature1 != ds_cor2_df$Feature2,]
ds_cor2_df <- ds_cor2_df[!duplicated(ds_cor2_df$CorrelationValue), ]
# Print the resulting dataframe
print(ds_cor2_df)
View(ds_cor2_df)
View(ds_cor2_df)
ds_cor1_df <- data.frame()
# Loop through the rows and columns of 'ds_cor1'
for (row in rownames(ds_cor1)) {
for (col in colnames(ds_cor1)) {
# Check if the correlation is greater than 0.3 or less than -0.3
if (ds_cor1[row, col] > 0.3 | ds_cor1[row, col] < -0.3) {
# Create a new row with the feature names and correlation value
new_row <- c(row, col, ds_cor1[row, col])
# Append the new row to the 'ds_cor1_df'
ds_cor1_df <- rbind(ds_cor1_df, new_row)
}
}
}
# Set appropriate column names for the result dataframe
colnames(ds_cor1_df) <- c("Feature1", "Feature2", "CorrelationValue")
# Delete correlation values for features with themselves
ds_cor1_df <- ds_cor1_df[ds_cor1_df$Feature1 != ds_cor1_df$Feature2, ]
# Remove duplicate rows based on the CorrelationValue column
ds_cor1_df <- ds_cor1_df[!duplicated(ds_cor1_df$CorrelationValue), ]
# Print the resulting dataframe
print(ds_cor1_df)
